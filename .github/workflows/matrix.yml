name: Matrix tests

on: 
  workflow_dispatch:
    inputs:
      cfids:
        description: "include array"
        default: '[{"environment": "dev", "cloudfront-id": "aaaaa"}, {"environment": "stage", "cloudfront-id": "bbbbb"}, {"environment": "sandbox", "cloudfront-id": "ccccc"}, {"environment": "prod", "cloudfront-id": "ddddd"}]'

jobs:
  build-matrix:
    name: build-matrix
    runs-on: ubuntu-latest
    outputs:
      environments: ${{ steps.get-envs.outputs.environments }}
      cloudfront-ids: ${{ steps.cloudfront-ids-env.outputs.cloudfront-ids }}
    steps:
      - name: Ennvironment
        id: get-envs
        run: |
          JSON=$(echo '["sandbox", "prod"]')
          echo "environments=$JSON"
          echo "environments=$JSON" >> $GITHUB_OUTPUT
      - name: Concat Cloudfront ids
        id: cloudfront-ids-env
        run: |
          JSON=$(echo '${{ inputs.cfids }}' | jq -c --argjson keys '${{ steps.get-envs.outputs.environments }}' 'map(select([.environment] | inside($keys)))')
          echo "cloudfront-ids=$JSON"
          echo "cloudfront-ids=$JSON" >> $GITHUB_OUTPUT

  check-matrix:
    name: check-matrix
    runs-on: ubuntu-latest
    needs: build-matrix
    strategy:
      matrix: 
        environment: ${{ fromJson(needs.build-matrix.outputs.environments) }}
        includes: ${{ fromJson(needs.build-matrix.outputs.cloudfront-ids) }}
    steps:
      - name: Check 1
        run: |
          matrix='${{ needs.build-matrix.outputs.environments }}'
          echo $matrix
          echo $matrix | jq .
          matrix='${{ needs.build-matrix.outputs.cloudfront-ids }}'
          echo $matrix
          echo $matrix | jq .
          matrix='${{ toJSON(matrix) }}'
          echo $matrix
          echo $matrix | jq .
